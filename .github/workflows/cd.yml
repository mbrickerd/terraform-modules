name: CD

on:
  pull_request:
    branches: [develop, main]
    types: [closed]

permissions:
  contents: write
  packages: write
  pull-requests: read

jobs:
  release:
    name: Create Release
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for GCP changes
        id: gcp_check
        run: |
          if git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -q "^modules/gcp/"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check for Azure changes
        id: azure_check
        run: |
          if git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -q "^modules/azure/"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Get GCP version
        if: steps.gcp_check.outputs.changed == 'true'
        id: gcp_version
        run: |
          VERSION=$(grep -oP 'module_version\s*=\s*"\K[^"]+' modules/gcp/versions.tf || echo "0.1.0")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          if [ "${{ github.base_ref }}" != "main" ]; then
            echo "version=$VERSION-dev.$(date +%Y%m%d)" >> $GITHUB_OUTPUT
          fi

      - name: Get Azure version
        if: steps.azure_check.outputs.changed == 'true'
        id: azure_version
        run: |
          VERSION=$(grep -oP 'module_version\s*=\s*"\K[^"]+' modules/azure/versions.tf || echo "0.1.0")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          if [ "${{ github.base_ref }}" != "main" ]; then
            echo "version=$VERSION-dev.$(date +%Y%m%d)" >> $GITHUB_OUTPUT
          fi

      - name: Package GCP module
        if: steps.gcp_check.outputs.changed == 'true'
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: 'terraform-gcp-modules-${{ steps.gcp_version.outputs.version }}.zip'
          directory: 'modules/gcp'

      - name: Package Azure module
        if: steps.azure_check.outputs.changed == 'true'
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: 'terraform-azure-modules-${{ steps.azure_version.outputs.version }}.zip'
          directory: 'modules/azure'

      - name: Publish GCP package
        if: steps.gcp_check.outputs.changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-gcp-modules-${{ steps.gcp_version.outputs.version }}
          path: modules/gcp/terraform-gcp-modules-${{ steps.gcp_version.outputs.version }}.zip
          retention-days: 90

      - name: Publish Azure package
        if: steps.azure_check.outputs.changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-azure-modules-${{ steps.azure_version.outputs.version }}
          path: modules/azure/terraform-azure-modules-${{ steps.azure_version.outputs.version }}.zip
          retention-days: 90

      - name: Create GCP release
        if: steps.gcp_check.outputs.changed == 'true' && github.base_ref == 'main'
        uses: softprops/action-gh-release@v1
        with:
          files: modules/gcp/terraform-gcp-modules-${{ steps.gcp_version.outputs.version }}.zip
          name: GCP Modules ${{ steps.gcp_version.outputs.version }}
          tag_name: gcp-${{ steps.gcp_version.outputs.version }}
          generate_release_notes: true

      - name: Create Azure release
        if: steps.azure_check.outputs.changed == 'true' && github.base_ref == 'main'
        uses: softprops/action-gh-release@v1
        with:
          files: modules/azure/terraform-azure-modules-${{ steps.azure_version.outputs.version }}.zip
          name: Azure Modules ${{ steps.azure_version.outputs.version }}
          tag_name: azure-${{ steps.azure_version.outputs.version }}
          generate_release_notes: true
